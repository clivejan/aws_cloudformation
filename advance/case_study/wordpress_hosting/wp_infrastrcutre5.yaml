Parameters:
  EnvironmentSize:
    Description: "Select Environment Size (S, M, L)"
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
  DatabaseName:
    Type: String
    Default: wordpress
  DatabaseUser:
    Type: String
    Default: wordpress
  DatabasePassword:
    Type: String
    Default: 1qaz2wsx
    NoEcho: true
  TestString:
    Type: String
    Default: "Test cfn-hup and cfn-init"

Mappings:
  RegionMap:
    us-east-1:
      AmazonLinux2: ami-0fc61db8544a617ed
    us-east-2:
      AmazonLinux2: ami-0e01ce4ee18447327
    us-west-1:
      AmazonLinux2: ami-09a7fe78668f1e2c0
    us-west-2:
      AmazonLinux2: ami-0ce21b51cb31a48b8
    ca-central-1:
      AmazonLinux2: ami-0bf54ac1b628cf143
  InstanceSize:
    SMALL:
      EC2: t2.micro
      DB: db.t2.micro
    MEDIUM:
      EC2: t2.small
      DB: db.t2.small
    LARGE:
      EC2: t2.medium
      DB: db.t2.medium          

Resources:
  DB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: 5
      StorageType: gp2
      DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB]
      DBName: !Ref DatabaseName
      Engine: MySQL
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
  EC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region',  AmazonLinux2]
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      KeyName: jobca-virginia
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash
            yum install aws-cfn-bootstrap -y
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
            yum update -y
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT3M
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          wordpress:
            - "configure_cfn"
            - "install_wordpress"
            - "config_wordpress"
        configure_cfn:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2 --configsets wordpress --region ${AWS::Region}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                verbose=true
                interval=5
              mode: "000400"
              owner: root
              group: root
            /var/www/html/index2.html:
              content: !Ref TestString
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_wordpress:
          packages:
            yum:
              httpd: []
              mariadb: []
          sources:
            /var/www/html: "https://wordpress.org/latest.tar.gz"
          commands:
            01_install_php74:
              command: "amazon-linux-extras install php7.4"
          services:
            sysvinit:
              httpd:
                enabled: "true"
                ensureRunning: "true"
        config_wordpress:
          commands:
            01_clone_config:
              cwd: "/var/www/html/wordpress"
              test: "test ! -e /var/www/html/wordpress/wp-config.php"
              command: " cp wp-config-sample.php wp-config.php"
            02_inject_dbhost:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/localhost/${DB.Endpoint.Address}/g' wp-config.php
            03_inject_dbname:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/database_name_here/${DatabaseName}/g' wp-config.php
            04_inject_dbuser:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/username_here/${DatabaseUser}/g' wp-config.php
            05_inject_dbpassword:
              cwd: "/var/www/html/wordpress"
              command: !Sub |
                sed -i 's/password_here/${DatabasePassword}/g' wp-config.php
  S3:
    Type: 'AWS::S3::Bucket'  # AWS names the bucket based by the stack name with random string
