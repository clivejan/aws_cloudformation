Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access into the server"
    Type: 'AWS::EC2::KeyPair::KeyName'
  VpcId:
    Description: "Enter the Vpc Id"
    Type: 'AWS::EC2::VPC::Id'
  SubnetIds:
    Description: "Enter the Subnets"
    Type: List<AWS::EC2::Subnet::Id>

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0fc61db8544a617ed
    us-east-2:
      AMI: ami-0e01ce4ee18447327
    us-west-1:
      AMI: ami-09a7fe78668f1e2c0
    us-west-2:
      AMI: ami-0ce21b51cb31a48b8
    ca-central-1:
      AMI: ami-0bf54ac1b628cf143

Resources:
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets: !Ref SubnetIds
  LoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 2
      MaxSize: 3
      TargetGroupARNs:
        - !Ref TargetGroup
  LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      Comment: Install php and httpd
      'AWS::CloudFormation::Init':
        config:
          packages:
            yum:
              httpd: []
              php: []
          files:
            /var/www/html/index.php:
              content: !Sub |
                <?php print gethostname(); ?>
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref EC2SecurityGroup
      ImageId:
        !FindInMap
          - RegionMap
          - !Ref 'AWS::Region'
          - AMI
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash
            # Ensure ASW CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}
  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: ALB Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: EC2 Instance
  EC2InboundRule:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      SourceSecurityGroupId:
        !GetAtt
        - ALBSecurityGroup
        - GroupId
      GroupId:
        !GetAtt
        - EC2SecurityGroup
        - GroupId

Outputs:
  PublicDns:
    Description: "TThe Public DNS"
    Value: !Sub "http://${LoadBalancer.DNSName}"
